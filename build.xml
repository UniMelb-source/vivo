<?xml version="1.0"?>
<project name="nihvivo" default="describe">
    <property name="build.dir" location="./.build" />
    <property name="appbase.dir" location="${build.dir}/appBase" />

    <property name="deploy.properties.file" location="deploy.properties" />
    <fail message="You must create a &quot;${deploy.properties.file}&quot; file.">
        <condition>
            <not>
                <available file="${deploy.properties.file}" />
            </not>
        </condition>
    </fail>
    <property file="${deploy.properties.file}" />
    <fail unless="vitro.core.dir" message="${deploy.properties.file} must contain a value for vitro.core.dir" />

    <!--
            Base it all on the core build file. 
    -->
    <import file="${vitro.core.dir}/webapp/build.xml" />

    <!-- - - - - - - - - - - - - - - - - - 
      target: prepare                      

      Override the core version, so we can merge the two levels before building.                      
     - - - - - - - - - - - - - - - - - -->
    <target name="prepare" depends="compileUtilities,product-prepare,vitroCore.prepare" />

    <!-- - - - - - - - - - - - - - - - - - 
      target: product-prepare                      
     - - - - - - - - - - - - - - - - - -->
    <target name="product-prepare">
        <mkdir dir="${appbase.dir}" />
        <mkdir dir="${appbase.dir}/web" />

        <copy todir="${appbase.dir}/web" includeemptydirs="true">
            <dirDifference dir="${corebase.dir}/web">
                <blockingPath>
                    <pathelement location="./productMods" />
                </blockingPath>
            </dirDifference>
            <fileset dir="./productMods" />
        </copy>

        <patternset id="appbase.patterns">
            <include name="src/**/*" />
            <include name="lib/**/*" />
            <include name="test/**/*" />
            <include name="themes/**/*" />
            <include name="config/*.properties" />
            <include name="config/*.txt" />
            <include name="config/jarlist/*.txt" />
            <include name="config/solr/*" />
            <include name="context.xml" />
        </patternset>

        <copy todir="${appbase.dir}" includeemptydirs="true">
            <dirDifference dir="${corebase.dir}">
                <patternset refid="appbase.patterns" />
                <exclude name="themes/**/*" if="skip.core.themes" />
                <blockingPath>
                    <pathelement location="." />
                </blockingPath>
            </dirDifference>
            <fileset dir=".">
                <patternset refid="appbase.patterns" />
            </fileset>
        </copy>
    </target>

    <import file="${vitro.core.dir}/webapp/build.xml" />

	<!-- ================================= 
	      target: revisionInfo              
	     
	      Override the core version, to get the 2-level effect.                      
	     ================================= -->
    <target name="revisionInfo" depends="vitroCore.revisionInfo" description="--> Store revision info in build">
            <addRevisionInfoLine productName="${ant.project.name}" productCheckoutDir="${basedir}" />
    </target>

	<!-- ================================= 
          target: licenser             
          
          In regular use, checks that all appropriate source files have license tags.
          At release time, applies license text to source files.
          The files are handled as properties so they can be overridden from the command line, if desired.
	     
       	      Override the core version, to get the 2-level effect.                      
    ================================= -->
    <target name="licenser" description="--> Check source files for licensing tags">
        <property name="licenser.product.properties.file" location="./config/licenser/licenser.properties" />
        <property name="licenser.core.properties.file" location="${corebase.dir}/config/licenser/licenser.properties" />
        <runLicenserScript productname="${ant.project.name}" propertiesfile="${licenser.product.properties.file}" />
        <runLicenserScript productname="Vitro core" propertiesfile="${licenser.core.properties.file}" />
    </target>

    <!-- ================================= 
     target: acceptance              
    ================================= -->
    <target name="acceptance" description="--> Run the Selenium acceptance tests.">
        <ant dir="${vitro.core.dir}/utilities/testrunner" target="run" inheritall="false">
            <property name="acceptance.dir" location="${basedir}/utilities/acceptance-tests" />
            <property name="acceptance.batch" value="${acceptance.batch}" />
        </ant>
    </target>
    
    <target name="deploy-no-test">
        <property name="webapp.deploy.home" value="${tomcat.home}/webapps/${webapp.name}" />
        <mkdir dir="${webapp.deploy.home}" />
        <sync todir="${webapp.deploy.home}" includeemptydirs="true">
            <fileset dir="${build.dir}/war" />
        </sync>
    </target>
</project>
